{"version":3,"file":"static/js/798.d851be04.chunk.js","mappings":"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","sources":["components/Contacts/Contacts.styled.js","redux/tasks/selectors.js","components/Contacts/Contacts.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Form/Form.styled.js","components/Form/Form.js","pages/Home.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  margin-bottom: 8px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Btn = styled.button`\n  border: 1px solid #858483;\n  border-radius: 7px;\n  cursor: pointer;\n  padding: 5px 8px;\n  margin-left: 8px;\n  transition: background 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: #3c5080;\n    border: 1px solid #3c5080;\n    color: #fcf7e3;\n  }\n`;\n","export const getFilter = ({ filter }) => filter;\nexport const getItems = ({ contacts }) => contacts.items;\nexport const getIsLoading = ({ contacts }) => contacts.isLoading;\nexport const getIsDeleting = ({ contacts }) => contacts.isDeleting;\nexport const getError = ({ contacts }) => contacts.error;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Item, Btn } from './Contacts.styled';\nimport { getFilter, getIsDeleting, getItems } from 'redux/tasks/selectors';\nimport { deleteContacts } from 'redux/tasks/operation';\nexport const Contacts = () => {\n  const contacts = useSelector(getItems);\n  const search = useSelector(getFilter);\n  const isDeleting = useSelector(getIsDeleting);\n  const dispatch = useDispatch();\n\n  const visibleContacts = contacts.filter(\n    contact =>\n      !search ||\n      contact.name.toLowerCase().includes(search.toLowerCase()) ||\n      contact.number.includes(search)\n  );\n\n  return (\n    <>\n      <ul>\n        {visibleContacts.map(contact => (\n          <Item key={contact.id}>\n            {contact.name}: {contact.number}\n            <Btn\n              onClick={() => dispatch(deleteContacts(contact.id))}\n              disabled={isDeleting}\n            >\n              {isDeleting === contact.id ? '...deleting' : 'Delete'}\n            </Btn>\n          </Item>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 10px;\n`;\n\nexport const Label = styled.label`\n  margin-top: 10px;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  border-radius: 8px;\n  border: 1px solid #6e6e6e;\n  margin-top: 8px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Wrapper, Label, Input } from './Filter.styled';\nimport { getFilter } from 'redux/tasks/selectors';\nimport { updateFilter } from 'redux/tasks/filter';\n\nexport const Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      <Label>Find contacts by name</Label>\n      <Input\n        type=\"text\"\n        value={value}\n        placeholder=\"Type name...\"\n        onChange={evt => dispatch(updateFilter(evt.target.value))}\n      />\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 11px;\n  padding: 20px 10px;\n  max-width: 300px;\n  border: 1px solid #f1f1f1;\n  border-radius: 8px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const StField = styled(Field)`\n  padding: 5px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  border-radius: 8px;\n  border: 1px solid #6e6e6e;\n  margin-top: 8px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: tomato;\n`;\n\nexport const Btn = styled.button`\n  border: 1px solid #858483;\n  border-radius: 7px;\n  cursor: pointer;\n  padding: 5px 8px;\n  max-width: 100px;\n  transition: background 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: #3c5080;\n    border: 1px solid #3c5080;\n    color: #fcf7e3;\n  }\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { StForm, StField, Error, Btn } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getItems } from 'redux/tasks/selectors';\nimport { addContacts } from 'redux/tasks/operation';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().min(2).max(50).required('* Name is required'),\n  number: Yup.string()\n    .min(6, 'Phone number is too short')\n    .max(16, 'Phone number is too long')\n    .required('* Enter phone number'),\n});\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getItems);\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(values, actions) => {\n          const isContactExists = contacts.find(\n            contact =>\n              contact.name.toLowerCase() === values.name.toLowerCase() ||\n              contact.number === values.number\n          );\n          if (isContactExists) {\n            alert('is already in contacts');\n          } else {\n            dispatch(addContacts({ ...values, id: nanoid() }));\n            actions.resetForm();\n          }\n        }}\n      >\n        <StForm>\n          <label>\n            Name\n            <StField type=\"text\" name=\"name\" placeholder=\"Harry Potter\" />\n            <Error name=\"name\" component=\"div\" />\n          </label>\n          <label>\n            Number\n            <StField type=\"tel\" name=\"number\" placeholder=\"xxx-xx-xx\" />\n            <Error name=\"number\" component=\"div\" />\n          </label>\n          <Btn type=\"submit\">Add contact</Btn>\n        </StForm>\n      </Formik>\n    </>\n  );\n};\n","import { Contacts } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\nimport { Form } from 'components/Form/Form';\nimport { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/tasks/operation';\nimport { getError, getIsLoading } from 'redux/tasks/selectors';\n\nexport default function Home() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const ref = useRef(false);\n\n  useEffect(() => {\n    !ref.current && dispatch(fetchContacts());\n    ref.current = true;\n  }, [dispatch]);\n  return (\n    <>\n      <section>\n        <h2>Add Contact</h2>\n        <Form />\n        <h3>Contacts</h3>\n        <Filter />\n        {isLoading && !error && <b>Request in progress...</b>}\n        <Contacts />\n      </section>\n    </>\n  );\n}\n"],"names":["Item","styled","_templateObject","_taggedTemplateLiteral","Btn","_templateObject2","getFilter","_ref","filter","getItems","_ref2","contacts","items","getIsLoading","_ref3","isLoading","getIsDeleting","_ref4","isDeleting","getError","_ref5","error","Contacts","useSelector","search","dispatch","useDispatch","visibleContacts","contact","name","toLowerCase","includes","number","_jsx","_Fragment","children","map","_jsxs","onClick","deleteContacts","id","disabled","Wrapper","Label","Input","_templateObject3","Filter","value","type","placeholder","onChange","evt","updateFilter","target","StForm","Form","StField","Field","Error","ErrorMessage","_templateObject4","validationSchema","Yup","shape","min","max","required","Formik","initialValues","onSubmit","values","actions","find","alert","addContacts","_objectSpread","nanoid","resetForm","component","Home","ref","useRef","useEffect","current","fetchContacts"],"sourceRoot":""}